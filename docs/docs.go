// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/support/admin/sup/add": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Register new SUPPORT user (available for users with role \"SUPER_ADMIN\")",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Support"
                ],
                "summary": "Add support",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Authorization header wasn` + "`" + `t found, Token is not bearer",
                        "schema": {
                            "$ref": "#/definitions/resp.JsonError"
                        }
                    },
                    "403": {
                        "description": "This resource is forbidden",
                        "schema": {
                            "$ref": "#/definitions/resp.JsonError"
                        }
                    },
                    "500": {
                        "description": "Something going wrong...",
                        "schema": {
                            "$ref": "#/definitions/resp.JsonError"
                        }
                    }
                }
            }
        },
        "/support/admin/sup/all": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Unregister SUPPORT user (available for users with role \"SUPER_ADMIN\")",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Support"
                ],
                "summary": "Get all supports",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of supportss",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.Support"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request params",
                        "schema": {
                            "$ref": "#/definitions/resp.JsonError"
                        }
                    },
                    "401": {
                        "description": "Authorization header wasn` + "`" + `t found, Token is not bearer",
                        "schema": {
                            "$ref": "#/definitions/resp.JsonError"
                        }
                    },
                    "403": {
                        "description": "This resource is forbidden",
                        "schema": {
                            "$ref": "#/definitions/resp.JsonError"
                        }
                    },
                    "500": {
                        "description": "Something going wrong...",
                        "schema": {
                            "$ref": "#/definitions/resp.JsonError"
                        }
                    }
                }
            }
        },
        "/support/admin/sup/remove": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Unregister SUPPORT user (available for users with role \"SUPER_ADMIN\")",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Support"
                ],
                "summary": "Remove support",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Authorization header wasn` + "`" + `t found, Token is not bearer",
                        "schema": {
                            "$ref": "#/definitions/resp.JsonError"
                        }
                    },
                    "403": {
                        "description": "This resource is forbidden",
                        "schema": {
                            "$ref": "#/definitions/resp.JsonError"
                        }
                    },
                    "500": {
                        "description": "Something going wrong...",
                        "schema": {
                            "$ref": "#/definitions/resp.JsonError"
                        }
                    }
                }
            }
        },
        "/support/history": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Returns list of messages of chat",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Support"
                ],
                "summary": "History of chat",
                "responses": {
                    "200": {
                        "description": "Successful response with history",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.Message"
                            }
                        }
                    },
                    "401": {
                        "description": "Authorization header wasn` + "`" + `t found, Token is not bearer",
                        "schema": {
                            "$ref": "#/definitions/resp.JsonError"
                        }
                    },
                    "500": {
                        "description": "Something going wrong...",
                        "schema": {
                            "$ref": "#/definitions/resp.JsonError"
                        }
                    }
                }
            }
        },
        "/support/s/chats/": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Returns list of chats support must to answer (available for users with role \"SUPPORT\")",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Support"
                ],
                "summary": "Support chats",
                "responses": {
                    "200": {
                        "description": "Successful response with chats",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    "401": {
                        "description": "Authorization header wasn` + "`" + `t found, Token is not bearer",
                        "schema": {
                            "$ref": "#/definitions/resp.JsonError"
                        }
                    },
                    "403": {
                        "description": "This resource is forbidden",
                        "schema": {
                            "$ref": "#/definitions/resp.JsonError"
                        }
                    },
                    "500": {
                        "description": "Something going wrong...",
                        "schema": {
                            "$ref": "#/definitions/resp.JsonError"
                        }
                    }
                }
            }
        },
        "/support/s/chats/:id/history": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Returns list of messages by userId (available for users with role \"SUPPORT\")",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Support"
                ],
                "summary": "History of chat (sup)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with history",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.Message"
                            }
                        }
                    },
                    "401": {
                        "description": "Authorization header wasn` + "`" + `t found, Token is not bearer",
                        "schema": {
                            "$ref": "#/definitions/resp.JsonError"
                        }
                    },
                    "403": {
                        "description": "This resource is forbidden",
                        "schema": {
                            "$ref": "#/definitions/resp.JsonError"
                        }
                    },
                    "500": {
                        "description": "Something going wrong...",
                        "schema": {
                            "$ref": "#/definitions/resp.JsonError"
                        }
                    }
                }
            }
        },
        "/support/s/chats/:id/ws": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Upgrade connection to websockets (available for users with role \"SUPPORT\")",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Support"
                ],
                "summary": "Sup to support chat",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Authorization header wasn` + "`" + `t found, Token is not bearer",
                        "schema": {
                            "$ref": "#/definitions/resp.JsonError"
                        }
                    },
                    "403": {
                        "description": "This resource is forbidden",
                        "schema": {
                            "$ref": "#/definitions/resp.JsonError"
                        }
                    },
                    "500": {
                        "description": "Something going wrong...",
                        "schema": {
                            "$ref": "#/definitions/resp.JsonError"
                        }
                    }
                }
            }
        },
        "/support/ws": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Upgrade connection to websockets",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Support"
                ],
                "summary": "Connect to support",
                "responses": {
                    "401": {
                        "description": "Authorization header wasn` + "`" + `t found, Token is not bearer",
                        "schema": {
                            "$ref": "#/definitions/resp.JsonError"
                        }
                    },
                    "500": {
                        "description": "Something going wrong...",
                        "schema": {
                            "$ref": "#/definitions/resp.JsonError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.Message": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "is_read": {
                    "type": "boolean"
                },
                "message_id": {
                    "type": "string"
                },
                "sender_id": {
                    "type": "integer"
                },
                "support_id": {
                    "type": "integer"
                },
                "timestamp": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "dto.Support": {
            "type": "object",
            "properties": {
                "countChat": {
                    "type": "integer"
                },
                "supportId": {
                    "type": "integer"
                }
            }
        },
        "resp.JsonError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,

}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
